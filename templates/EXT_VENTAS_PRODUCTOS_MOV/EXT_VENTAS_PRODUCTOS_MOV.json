{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"SqlServerOnPremises": {
			"type": "string"
		},
		"AzureDataLakeStorage": {
			"type": "string"
		},
		"AzureSqlDatabase": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EXT_VENTAS_PRODUCTOS_MOV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TransactToADL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT *\n\t  ,CHECKSUM([NOMBRE_PRODUCTO],[COLOR],[ESTADO_DISPONIBLE]\n      ,CAST ([ID_CIUDAD] AS NVARCHAR(50))\n      ,CAST( [PRECIO] AS NVARCHAR(50))) ROW_HASH\n  FROM @{pipeline().parameters.Esquema}.@{pipeline().parameters.Tabla}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable",
								"type": "DatasetReference",
								"parameters": {
									"Esquema": {
										"value": "@pipeline().parameters.Esquema",
										"type": "Expression"
									},
									"Tabla": {
										"value": "@pipeline().parameters.Tabla",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LoadADL",
								"type": "DatasetReference",
								"parameters": {
									"Carpeta": {
										"value": "@pipeline().parameters.CarpetaADL",
										"type": "Expression"
									},
									"Archivo": {
										"value": "@Concat(pipeline().parameters.Archivo,'.txt') ",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "dflow_Productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "TransactToADL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dflow_Productos",
								"type": "DataFlowReference",
								"datasetParameters": {
									"LecturaADL": {
										"Carpeta": {
											"value": "@pipeline().parameters.CarpetaADL",
											"type": "Expression"
										},
										"Archivo": {
											"value": "@Concat(pipeline().parameters.Archivo,'.txt') ",
											"type": "Expression"
										}
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"CarpetaADL": {
						"type": "string",
						"defaultValue": "BDBODYTECH/ARCHIVO_ACTUAL/"
					},
					"Archivo": {
						"type": "string",
						"defaultValue": "VENTAS_PRODUCTOS_MOV"
					},
					"Esquema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"Tabla": {
						"type": "string",
						"defaultValue": "VENTAS_PRODUCTOS_MOV"
					}
				},
				"folder": {
					"name": "Dimensiones/ExtracciÃ³n"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/LoadADL')]",
				"[concat(variables('factoryId'), '/dataflows/dflow_Productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('SqlServerOnPremises')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"Servidor": "DESKTOP-3TU8UPV",
						"BD": "DW_LOCAL"
					}
				},
				"parameters": {
					"Esquema": {
						"type": "string"
					},
					"Tabla": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SqlOnPremises"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Esquema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Tabla",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadADL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Carpeta": {
						"type": "string"
					},
					"Archivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Parquet"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Archivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Carpeta",
							"type": "Expression"
						},
						"fileSystem": "oltp"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dflow_Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LoadADL",
								"type": "DatasetReference"
							},
							"name": "LecturaADL"
						},
						{
							"dataset": {
								"referenceName": "Dim_VENTAS_PRODUCTOS_MOV",
								"type": "DatasetReference"
							},
							"name": "LecturaDW"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Dim_VENTAS_PRODUCTOS_MOV",
								"type": "DatasetReference"
							},
							"name": "Nuevos"
						},
						{
							"dataset": {
								"referenceName": "Dim_VENTAS_PRODUCTOS_MOV",
								"type": "DatasetReference"
							},
							"name": "ActualizarExistentes"
						}
					],
					"transformations": [
						{
							"name": "UnionADLtoDW"
						},
						{
							"name": "Accion"
						},
						{
							"name": "FechaInsert"
						},
						{
							"name": "FechaUpdate"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tID_PRODUCTO as integer,\n\t\tNOMBRE_PRODUCTO as string,\n\t\tCOLOR as string,\n\t\tESTADO_DISPONIBLE as string,\n\t\tID_CIUDAD as integer,\n\t\tPRECIO as integer,\n\t\tROW_HASH as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LecturaADL\nsource(output(\n\t\tID_PRODUCTO_DW as integer,\n\t\tROW_HASH_DW as integer,\n\t\tActual_Aplica as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT \\n[ID_PRODUCTO] [ID_PRODUCTO_DW],[ROW_HASH] [ROW_HASH_DW],isnull(Actual_Aplica,0) Actual_Aplica\\nFROM\\n[Dim].[VENTAS_PRODUCTOS_MOV]',\n\tformat: 'query') ~> LecturaDW\nLecturaADL, LecturaDW join(ID_PRODUCTO == ID_PRODUCTO_DW,\n\tjoinType:'outer',\n\tbroadcast: 'none')~> UnionADLtoDW\nUnionADLtoDW split(isNull(ID_PRODUCTO_DW),\n\tROW_HASH!=ROW_HASH_DW,\n\tdisjoint: false) ~> Accion@(Nuevo, Existente, Omitir)\nAccion@Nuevo derive(Fecha_Insertado = fromUTC( currentUTC(), 'America/Bogota')) ~> FechaInsert\nAccion@Existente derive(Fecha_Actualizado = fromUTC( currentUTC(), 'America/Bogota' ),\n\t\tActual_Aplica = Actual_Aplica + 1) ~> FechaUpdate\nFechaUpdate alterRow(updateIf(ROW_HASH!=ROW_HASH_DW)) ~> AlterRow1\nFechaInsert sink(input(\n\t\tID_PRODUCTO as integer,\n\t\tNOMBRE_PRODUCTO as string,\n\t\tCOLOR as string,\n\t\tESTADO_DISPONIBLE as string,\n\t\tID_CIUDAD as integer,\n\t\tPRECIO as integer,\n\t\tROW_HASH as integer,\n\t\tFecha_Insertado as timestamp,\n\t\tFecha_Actualizado as timestamp,\n\t\tActual_Aplica as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tID_PRODUCTO,\n\t\tNOMBRE_PRODUCTO,\n\t\tCOLOR,\n\t\tESTADO_DISPONIBLE,\n\t\tID_CIUDAD,\n\t\tPRECIO,\n\t\tROW_HASH,\n\t\tFecha_Insertado\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Nuevos\nAlterRow1 sink(input(\n\t\tID_PRODUCTO as integer,\n\t\tNOMBRE_PRODUCTO as string,\n\t\tCOLOR as string,\n\t\tESTADO_DISPONIBLE as string,\n\t\tID_CIUDAD as integer,\n\t\tPRECIO as integer,\n\t\tROW_HASH as integer,\n\t\tFecha_Insertado as timestamp,\n\t\tFecha_Actualizado as timestamp,\n\t\tActual_Aplica as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ID_PRODUCTO'],\n\tformat: 'table',\n\tmapColumn(\n\t\tID_PRODUCTO,\n\t\tNOMBRE_PRODUCTO,\n\t\tCOLOR,\n\t\tESTADO_DISPONIBLE,\n\t\tID_CIUDAD,\n\t\tPRECIO,\n\t\tROW_HASH,\n\t\tActual_Aplica,\n\t\tFecha_Actualizado\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ActualizarExistentes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LoadADL')]",
				"[concat(variables('factoryId'), '/datasets/Dim_VENTAS_PRODUCTOS_MOV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_VENTAS_PRODUCTOS_MOV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SqlAzure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PRODUCTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NOMBRE_PRODUCTO",
						"type": "nvarchar"
					},
					{
						"name": "COLOR",
						"type": "nvarchar"
					},
					{
						"name": "ESTADO_DISPONIBLE",
						"type": "nvarchar"
					},
					{
						"name": "ID_CIUDAD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRECIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ROW_HASH",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fecha_Insertado",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Fecha_Actualizado",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Actual_Aplica",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Dim",
					"table": "VENTAS_PRODUCTOS_MOV"
				}
			},
			"dependsOn": []
		}
	]
}