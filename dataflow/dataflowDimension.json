{
	"name": "dataflowDimension",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LoadADL",
						"type": "DatasetReference"
					},
					"name": "LecturaADL"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlProductCategoria",
						"type": "DatasetReference"
					},
					"name": "LecturaDW"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlProductCategoria",
						"type": "DatasetReference"
					},
					"name": "CargarRegistros"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlProductCategoria",
						"type": "DatasetReference"
					},
					"name": "ActualizarRegistros"
				}
			],
			"transformations": [
				{
					"name": "CalcularRowHash"
				},
				{
					"name": "Nuevo"
				},
				{
					"name": "SelectRowHash"
				},
				{
					"name": "SelectLlave"
				},
				{
					"name": "Existente"
				},
				{
					"name": "MarcarCambios"
				},
				{
					"name": "IdentificarCambios"
				},
				{
					"name": "AdicionColumnasComunes"
				}
			],
			"script": "source(output(\n\t\tProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LecturaADL\nsource(output(\n\t\tFSK as integer,\n\t\tProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tROWHASH as string,\n\t\tFECHACREACION as timestamp,\n\t\tFECHAACTUALIZACION as timestamp,\n\t\tACTUALIZACIONESAPLICADAS as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> LecturaDW\nLecturaADL derive(ROWHASH = sha1(512,ProductCategoryID,Name,rowguid,ModifiedDate)) ~> CalcularRowHash\nCalcularRowHash, SelectLlave exists(LecturaADL@ProductCategoryID == SelectLlave@ProductCategoryID,\n\tnegate:true,\n\tbroadcast: 'auto')~> Nuevo\nLecturaDW select(mapColumn(\n\t\tROWHASH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRowHash\nLecturaDW select(mapColumn(\n\t\tProductCategoryID,\n\t\tFECHACREACION,\n\t\tFECHAACTUALIZACION,\n\t\tACTUALIZACIONESAPLICADAS,\n\t\tROWHASH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLlave\nCalcularRowHash, SelectLlave exists(LecturaADL@ProductCategoryID == SelectLlave@ProductCategoryID,\n\tnegate:false,\n\tbroadcast: 'auto')~> Existente\nAdicionColumnasComunes alterRow(updateIf(isNull(CalcularRowHash@ROWHASH!=SelectLlave@ROWHASH))) ~> MarcarCambios\nExistente, SelectLlave lookup(CalcularRowHash@ROWHASH == SelectLlave@ROWHASH,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> IdentificarCambios\nIdentificarCambios derive(ACTUALIZACIONESAPLICADAS = iifNull(ACTUALIZACIONESAPLICADAS,0,ACTUALIZACIONESAPLICADAS)+ 1,\n\t\tFECHACREACION = fromUTC(currentTimestamp(),'America/Bogota'),\n\t\tFECHAACTUALIZACION = fromUTC(currentTimestamp(),'America/Bogota')) ~> AdicionColumnasComunes\nNuevo sink(input(\n\t\tFSK as integer,\n\t\tProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tROWHASH as string,\n\t\tFECHACREACION as timestamp,\n\t\tFECHAACTUALIZACION as timestamp,\n\t\tACTUALIZACIONESAPLICADAS as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductCategoryID,\n\t\tName,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tROWHASH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CargarRegistros\nMarcarCambios sink(input(\n\t\tFSK as integer,\n\t\tProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tROWHASH as string,\n\t\tFECHACREACION as timestamp,\n\t\tFECHAACTUALIZACION as timestamp,\n\t\tACTUALIZACIONESAPLICADAS as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ProductCategoryID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tProductCategoryID = LecturaADL@ProductCategoryID,\n\t\tName,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tROWHASH = CalcularRowHash@ROWHASH,\n\t\tFECHACREACION,\n\t\tFECHAACTUALIZACION,\n\t\tACTUALIZACIONESAPLICADAS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ActualizarRegistros"
		}
	}
}